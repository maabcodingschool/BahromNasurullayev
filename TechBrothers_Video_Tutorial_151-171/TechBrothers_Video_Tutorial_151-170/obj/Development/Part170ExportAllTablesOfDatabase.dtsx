<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/16/2021 3:27:49 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-L0OT3IQS"
  DTS:CreatorName="LAPTOP-L0OT3IQS\MaabB"
  DTS:DTSID="{EFA0F9D4-328C-4F09-A445-B8FFD1DB4C7A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.166"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="6"
  DTS:VersionGUID="{5ACD632E-8FDC-4E30-A2F8-9EBAC1D198B7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DB_Conn_TechBrothersIT]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{DC5914C4-AF0F-4A13-B787-CBD7B15D9617}"
      DTS:ObjectName="DB_Conn_TechBrothersIT">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LAPTOP-L0OT3IQS;Initial Catalog=SSIS;Integrated Security=True;Application Name=SSIS-Package1-{DC5914C4-AF0F-4A13-B787-CBD7B15D9617}LAPTOP-L0OT3IQS.SSIS1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B1186E0-B8D7-4C9C-9481-AA311621B606}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\MaabB\OneDrive\Desktop\Bahrom\SSIS\Text files\DestinationFolder\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{3A6A4CC2-19BB-4110-98B5-22F7557299AB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_42353b60f7444d039da78c15f6e2a4ae"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DestinationFolder">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_42353b60f7444d039da78c15f6e2a4ae.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EC637E68-EE25-4EDC-828C-EE11EE728D5C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_42353b60f7444d039da78c15f6e2a4ae</RootNamespace>
    <AssemblyName>ST_42353b60f7444d039da78c15f6e2a4ae</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_42353b60f7444d039da78c15f6e2a4ae
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here

            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            try
            {

                //Declare Variables

                string FolderPath = Dts.Variables["User::DestinationFolder"].Value.ToString();

                //USE ADO.NET Connection from SSIS Package to get data from table
                SqlConnection myADONETConnection = new SqlConnection();
                myADONETConnection = (SqlConnection)(Dts.Connections["DB_Conn_TechBrothersIT"].AcquireConnection(Dts.Transaction) as SqlConnection);


                //Read list of Tables with Schema from Database
                string query = "SELECT Schema_name(schema_id) AS SchemaName,name AS TableName FROM   sys.tables WHERE  is_ms_shipped = 0";

                //MessageBox.Show(query.ToString());
                SqlCommand cmd = new SqlCommand(query, myADONETConnection);
                //myADONETConnection.Open();
                DataTable dt = new DataTable();
                dt.Load(cmd.ExecuteReader());
                myADONETConnection.Close();

                //Loop through datatable(dt) that has schema and table names

                foreach (DataRow dt_row in dt.Rows)
                {
                    string SchemaName = "";
                    string TableName = "";
                    object[] array = dt_row.ItemArray;
                    SchemaName = array[0].ToString();
                    TableName = array[1].ToString();


                    string ExcelFileName = "";
                    ExcelFileName = SchemaName + "_" + TableName + "_" + datetime;
                    OleDbConnection Excel_OLE_Con = new OleDbConnection();
                    OleDbCommand Excel_OLE_Cmd = new OleDbCommand();

                    //Construct ConnectionString for Excel
                    string connstring = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + "\\" + ExcelFileName
                        + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";

                    //Load Data into DataTable from SQL ServerTable

                    string queryString =
                      "SELECT * from " + SchemaName + "." + TableName;
                    SqlDataAdapter adapter = new SqlDataAdapter(queryString, myADONETConnection);
                    DataSet ds = new DataSet();
                    adapter.Fill(ds);


                    //Get Header Columns
                    string TableColumns = "";

                    // Get the Column List from Data Table so can create Excel Sheet with Header
                    foreach (DataTable table in ds.Tables)
                    {
                        foreach (DataColumn column in table.Columns)
                        {
                            TableColumns += column + "],[";
                        }
                    }

                    // Replace most right comma from Columnlist
                    TableColumns = ("[" + TableColumns.Replace(",", " Text,").TrimEnd(','));
                    TableColumns = TableColumns.Remove(TableColumns.Length - 2);
                    //MessageBox.Show(TableColumns);


                    //Use OLE DB Connection and Create Excel Sheet
                    Excel_OLE_Con.ConnectionString = connstring;
                    Excel_OLE_Con.Open();
                    Excel_OLE_Cmd.Connection = Excel_OLE_Con;
                    Excel_OLE_Cmd.CommandText = "Create table [" + SchemaName + "_" + TableName + "] (" + TableColumns + ")";
                    Excel_OLE_Cmd.ExecuteNonQuery();


                    //Write Data to Excel Sheet from DataTable dynamically
                    foreach (DataTable table in ds.Tables)
                    {
                        String sqlCommandInsert = "";
                        String sqlCommandValue = "";
                        foreach (DataColumn dataColumn in table.Columns)
                        {
                            sqlCommandValue += dataColumn + "],[";
                        }

                        sqlCommandValue = "[" + sqlCommandValue.TrimEnd(',');
                        sqlCommandValue = sqlCommandValue.Remove(sqlCommandValue.Length - 2);
                        sqlCommandInsert = "INSERT into [" + SchemaName + "_" + TableName + "] (" + sqlCommandValue + ") VALUES(";

                        int columnCount = table.Columns.Count;
                        foreach (DataRow row in table.Rows)
                        {
                            string columnvalues = "";
                            for (int i = 0; i < columnCount; i++)
                            {
                                int index = table.Rows.IndexOf(row);
                                columnvalues += "'" + table.Rows[index].ItemArray[i] + "',";

                            }
                            columnvalues = columnvalues.TrimEnd(',');
                            var command = sqlCommandInsert + columnvalues + ")";
                            Excel_OLE_Cmd.CommandText = command;
                            Excel_OLE_Cmd.ExecuteNonQuery();
                        }

                    }
                    Excel_OLE_Con.Close();
                }
                Dts.TaskResult = (int)ScriptResults.Success;
            }

            catch (Exception exception)
            {

                // Create Log File for Errors
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::DestinationFolder"].Value.ToString() + "\\" +
                  "ErrorLog_" + datetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;

                }

            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_42353b60f7444d039da78c15f6e2a4ae</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_42353b60f7444d039da78c15f6e2a4ae</msb:DisplayName>
    <msb:ProjectId>{30349EA9-56F8-4935-B300-FB56B04F4637}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_42353b60f7444d039da78c15f6e2a4ae.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_42353b60f7444d039da78c15f6e2a4ae.Properties.Settings.get_Default():ST_42353b60f7444d039da78c15f6e2a4ae.Properties.Sett" +
    "ings")]

namespace ST_42353b60f7444d039da78c15f6e2a4ae.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_42353b60f7444d039da78c15f6e2a4ae")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_42353b60f7444d039da78c15f6e2a4ae")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_42353b60f7444d039da78c15f6e2a4ae.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_42353b60f7444d039da78c15f6e2a4ae.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_42353b60f7444d039da78c15f6e2a4ae.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_42353b60f7444d039da78c15f6e2a4ae.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_42353b60f7444d039da78c15f6e2a4ae.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_42353b60f7444d039da78c15f6e2a4ae.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKf5oGAAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAApjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ7AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
OwAAAAAAAEgAAAACAAUAwCYAANwTAAABAAAAAAAAAJw6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgA1BQAAAQAAESgQAAAKCxIBcgEAAHAoEQAACgoCKBIA
AApvEwAACnIfAABwbxQAAApvFQAACm8WAAAKDHMXAAAKDQIoEgAACm8YAAAKck8AAHBvGQAACgIo
EgAACm8aAAAKbxsAAAp1EAAAAQ1yfQAAcAlzHAAAChMEcx0AAAolEQRvHgAACm8fAAAKCW8gAAAK
byEAAApvIgAAChMFOAcEAAARBW8jAAAKdBkAAAFyUAEAcBMGclABAHATB28kAAAKJRaabxYAAAoT
BheabxYAAAoTB3JQAQBwEwgbjS8AAAElFhEGoiUXclIBAHCiJRgRB6IlGXJSAQBwoiUaBqIoJQAA
ChMIcyYAAAoTCXMnAAAKEwobjS8AAAElFnJWAQBwoiUXCKIlGHK0AQBwoiUZEQiiJRpyuAEAcKIo
JQAAChMLchYCAHARBnI0AgBwEQcoKAAACglzKQAACnMqAAAKEwwRDG8rAAAKJnJQAQBwEw0RDG8s
AAAKbyIAAAoTDitkEQ5vIwAACnQYAAABby0AAApvIgAAChMPKyoRD28jAAAKdBYAAAETEBENERAl
LQQmFCsFbxYAAApyOAIAcCguAAAKEw0RD28vAAAKLc3eFREPdRcAAAETERERLAcREW8wAAAK3BEO
by8AAAotk94VEQ51FwAAARMREREsBxERbzAAAArcckACAHARDXJEAgBwckgCAHBvMQAACheNNAAA
ASUWHyydbzIAAAooMwAAChMNEQ0RDW80AAAKGFlvNQAAChMNEQkRC282AAAKEQlvNwAAChEKEQlv
OAAAChEKHY0vAAABJRZyVgIAcKIlFxEGoiUYclIBAHCiJRkRB6IlGnJ0AgBwoiUbEQ2iJRxyfAIA
cKIoJQAACm85AAAKEQpvOgAACiYRDG8sAAAKbyIAAAoTDjjGAQAAEQ5vIwAACnQYAAABExJyUAEA
cBMTclABAHATFBESby0AAApvIgAAChMPKyoRD28jAAAKdBYAAAETFhEUERYlLQQmFCsFbxYAAApy
OAIAcCguAAAKExQRD28vAAAKLc3eFREPdRcAAAETERERLAcREW8wAAAK3HJAAgBwERQXjTQAAAEl
Fh8snW8yAAAKKDMAAAoTFBEUERRvNAAAChhZbzUAAAoTFB2NLwAAASUWcoACAHCiJRcRBqIlGHJS
AQBwoiUZEQeiJRpydAIAcKIlGxEUoiUccpwCAHCiKCUAAAoTExESby0AAApvOwAAChMVERJvIQAA
Cm8iAAAKEw84oAAAABEPbyMAAAp0GQAAARMXclABAHATGBYTGitLERJvIQAAChEXbzwAAAoTGxEY
crACAHAREm8hAAAKERtvPQAACm8kAAAKERqaJS0EJhQrBW8WAAAKcrQCAHAoKAAAChMYERoXWBMa
ERoRFTKvERgXjTQAAAElFh8snW8yAAAKExgRExEYcnwCAHAoLgAAChMZEQoRGW85AAAKEQpvOgAA
CiYRD28vAAAKOlT////eFREPdRcAAAETERERLAcREW8wAAAK3BEOby8AAAo6Lv7//94VEQ51FwAA
ARMREREsBxERbzAAAArcEQlvIAAAChEFby8AAAo67fv//94VEQV1FwAAARMREREsBxERbzAAAArc
AigSAAAKFm8+AAAK3mITHAIoEgAACm8TAAAKch8AAHBvFAAACm8VAAAKbxYAAApyugIAcAZy0AIA
cCgoAAAKKD8AAAoTHREdERxvFgAACm9AAAAKAigSAAAKF28+AAAK3gwRHSwHER1vMAAACtzeACoA
AABBxAAAAgAAAJEBAAA3AAAAyAEAABUAAAAAAAAAAgAAAHcBAABxAAAA6AEAABUAAAAAAAAAAgAA
ANsCAAA3AAAAEgMAABUAAAAAAAAAAgAAAK8DAACzAAAAYgQAABUAAAAAAAAAAgAAAKwCAADZAQAA
hQQAABUAAAAAAAAAAgAAAJUAAAAaBAAArwQAABUAAAAAAAAAAgAAAAoFAAAcAAAAJgUAAAwAAAAA
AAAAAAAAABMAAAC/BAAA0gQAAGIAAAAaAAABHgIoQQAACioeAihCAAAKKq5+AQAABC0ectoCAHDQ
AwAAAihDAAAKb0QAAApzRQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKEYA
AAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACABQAA
I34AAOwFAABECAAAI1N0cmluZ3MAAAAAMA4AAEwDAAAjVVMAfBEAABAAAAAjR1VJRAAAAIwRAABQ
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAOgAAAAUAAAAGAAAACQAAAAEA
AABGAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAUAQBAAAAAAAG
ANECXAYGAGADXAYGAB0CSQYPANAGAAAGAEoC8wQGALQC8wQGAJUC8wQGAEcD8wQGAPEC8wQGAAoD
8wQGAGEC8wQGAHwCnQMKACUD/wMKAHMB/wMGAAsBhgQOAHEFtwcOAHwAtwcGACIGPAcOAE8FRwAO
AG8ARwAOAJQHOwAOAK4EOwAGANYAhgQOAMMAOwAOAA8IOwAGAH8FhgQGAPsFCgAGAI0EhgQGAAAC
SQYGAI0HhgQGANkFfAYGAJwFzgQSANABOgQSADECOgQSAKoBuQQGAOUBXAYKACgE/wMWAB0HFAEW
AM0AFAEWAFMHFAEWAOkFFAEOALkFtwcOAK0FOwAOAFIFiQUOAC4FOwAOAI8BOwAGAM4DhgQOABMG
twcOABYGiQUOAAUFOwAOABkFOwAGAKgFhgQOAHIAiQUGAAYBCgAGAAgGCgAGAD4BhgQGAOIAhgQG
ACkI8wQAAAAAAQAAAAAAAQABAAEAEACjBIcAOQABAAEAAAAQAIMG3wZ5AAEAAwAAARAAJwffBo0A
AwAHAAMBAABvBwAAcQAEAAoAEQCSBDkBEQBjAT0BEQCzAEIBBgYzAEYBVoBfB0kBVoBDAUkBUCAA
AAAAhgCpBAYAAQBYJgAAAACGGDwGBgABAGAmAAAAAIMYPAYGAAEAaCYAAAAAkwjVBU0BAQCUJgAA
AACTCEsBUgEBAJsmAAAAAJMIVwFYAQEAoyYAAAAAlgicB18BAgCqJgAAAACGGDwGBgACALImAAAA
AJEYQgZkAQIAAAABAIgDCQA8BgEAEQA8BgYAGQA8BgoAKQA8BhAAMQA8BhAAOQA8BhAAQQA8BhAA
SQA8BhAAUQA8BhAAWQA8BhAAYQA8BhAAaQA8BgYA6QA8BgYAEQE8BhUAIQE8BgYAeQAHCE0AeQDM
A1IAcQBnB1cAKQEZB10AMQF9BGMAOQF+A2oA8QDMA24AgQA8BgYAKQFPB3IAQQF9BHgAKQHjBGoA
SQFfBX8AiQA8BoQAwQA8BgYAiQDHBYsAwQBiAJEAYQHCAQYAwQB9B5gAcQEuBp4AkQDNB2oAyQAX
CKMAeQGGB6gAmQA8BgYAoQA8BgYAeQGGB64AgQE8BoQAqQA8BgYAiQF4BLYAqQAOB7wAwQAwB8IA
eQGGB8gAkQDjB88AuQDIAQYAeQGrANMAeQFnANkAeQGGB98AeQHVA+UAeQGOA+kAYQG3AxAAYQGe
BAYAoQBABe4AqQHsBxAAqQEyCOUAcQHZB+UAaQGVA/QAaQF9BPoAKQGoBwEAsQH8BwABuQE0ARAA
cQA8BgYA8QA8BgYAwQH0AAYBwQElCA8B+QA8BhUBGQE8BgYACAAUAC8BCAAYADQBKQBzAKABLgAL
AHgBLgATAIEBLgAbAKABLgAjAKkBLgArANIBLgAzANIBLgA7ANgBLgBDAKkBLgBLAOUBLgBTANIB
LgBbAAMCQwBjADQBSQBzAKABYQB7ADQBYwBrADQBHAADAAEABAADAAAA2QVoAQAAawFtAQAAoAdz
AQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAfh67bwAAAAAAAIcAAAAEAAAAAAAAAAAA
AAAdAVkAAAAAAA8AAAAAAAAAAAAAACYB4AMAAAAABAAAAAAAAAAAAAAAHQE7AAAAAAAEAAAAAAAA
AAAAAAAdAYYEAAAAAA8AAAAAAAAAAAAAACYBFAAAAAAAAAAAAAEAAACNBgAABQACAAAAADxNb2R1
bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0
ZW0uRGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgBMb2FkAFRyaW1FbmQAT2xlRGJDb21t
YW5kAFNxbENvbW1hbmQAU1RfNDIzNTNiNjBmNzQ0NGQwMzlkYTc4YzE1ZjZlMmE0YWUAUmVwbGFj
ZQBkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJu
YWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9z
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFJlbW92ZQBJ
bmRleE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAc2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9T
dHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0u
Q29tcG9uZW50TW9kZWwAU1RfNDIzNTNiNjBmNzQ0NGQwMzlkYTc4YzE1ZjZlMmE0YWUuZGxsAEZp
bGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFD
b2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5z
YWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24ARGF0YUNvbHVtbkNv
bGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24AT2xlRGJDb25uZWN0aW9u
AEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNv
bW1vbgBDdWx0dXJlSW5mbwBDaGFyAElEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJl
YWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFN0cmVhbVdyaXRlcgBU
ZXh0V3JpdGVyAFNxbERhdGFBZGFwdGVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfNDIzNTNiNjBmNzQ0NGQwMzlkYTc4YzE1ZjZlMmE0YWUuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzQyMzUzYjYwZjc0
NDRkMDM5ZGE3OGMxNWY2ZTJhNGFlLlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFibGVz
AFNldHRpbmdzAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMA
U3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABEYXRh
U2V0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRf
Q3VycmVudABnZXRfQ291bnQATW92ZU5leHQAc2V0X0NvbW1hbmRUZXh0AENyZWF0ZVRleHQAZ2V0
X05vdwBEYXRhUm93AGdldF9JdGVtQXJyYXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQAA
AAAdeQB5AHkAeQBNAE0AZABkAEgASABtAG0AcwBzAAAvVQBzAGUAcgA6ADoARABlAHMAdABpAG4A
YQB0AGkAbwBuAEYAbwBsAGQAZQByAAAtRABCAF8AQwBvAG4AbgBfAFQAZQBjAGgAQgByAG8AdABo
AGUAcgBzAEkAVAAAgNFTAEUATABFAEMAVAAgAFMAYwBoAGUAbQBhAF8AbgBhAG0AZQAoAHMAYwBo
AGUAbQBhAF8AaQBkACkAIABBAFMAIABTAGMAaABlAG0AYQBOAGEAbQBlACwAbgBhAG0AZQAgAEEA
UwAgAFQAYQBiAGwAZQBOAGEAbQBlACAARgBSAE8ATQAgACAAIABzAHkAcwAuAHQAYQBiAGwAZQBz
ACAAVwBIAEUAUgBFACAAIABpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACAAPQAgADAAAAEAA18A
AF1QAHIAbwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABC
AC4AMQAyAC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMAZQA9AAADXAAAXTsARQB4AHQAZQBuAGQA
ZQBkACAAUAByAG8AcABlAHIAdABpAGUAcwA9ACIARQB4AGMAZQBsACAAMQAyAC4AMAAgAFgAbQBs
ADsASABEAFIAPQBZAEUAUwA7ACIAAB1TAEUATABFAEMAVAAgACoAIABmAHIAbwBtACAAAAMuAAAH
XQAsAFsAAANbAAADLAAADSAAVABlAHgAdAAsAAAdQwByAGUAYQB0AGUAIAB0AGEAYgBsAGUAIABb
AAAHXQAgACgAAAMpAAAbSQBOAFMARQBSAFQAIABpAG4AdABvACAAWwAAEykAIABWAEEATABVAEUA
UwAoAAADJwABBScALAABFVwARQByAHIAbwByAEwAbwBnAF8AAAkuAGwAbwBnAABxUwBUAF8ANAAy
ADMANQAzAGIANgAwAGYANwA0ADQANABkADAAMwA5AGQAYQA3ADgAYwAxADUAZgA2AGUAMgBhADQA
YQBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAD5vfOy4Uj6R7u6
hQuuup4UAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAhTAHHg4RPQ4SQRJFEkkODg4STRJRDhJV
DhJJEkkSWRJdEmEODggSWRJlDg4ICBJpEm0EAAARPQQgAQ4OBSAAEoCVBSAAEoCZBiABEoCdHAMg
ABwDIAAOBSAAEoChBiABEoClHAQgARwcBiACAQ4SQQUgABKAqQYgAQESgK0FIAASgLUEIAASSQQg
AB0cBQABDh0OBwAEDg4ODg4FIAEIElUFIAASgMkFIAASgM0GAAMODg4OAyAAAgUgAg4ODgUgAQ4d
AwUAAg4ODgMgAAgEIAEOCAUgAQESTQUgAQgSZQUgARJlCAUAARJtDggAARKA4RGA5QUgABKA6Qcg
AgEOEoDpCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEn0EBhKAgQMGEhACBggDBhEUBAAA
En0FAAASgIEGAAEBEoCBBAAAEhADAAABBAgAEn0FCAASgIEECAASEAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNDIzNTNiNjBmNzQ0NGQwMzlk
YTc4YzE1ZjZlMmE0YWUAAAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29weXJpZ2h0IEAgSFAgSW5j
LiAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8OwAAAAAAAAAAAACWOwAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAADYEAAAAAAAAAAAAADYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQC7b34eAAABALtvfh4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASWAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAByAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAMAAIAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABIAFAAIABJAG4AYwAuAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQA
aQBvAG4AAAAAAFMAVABfADQAMgAzADUAMwBiADYAMABmADcANAA0ADQAZAAwADMAOQBkAGEANwA4
AGMAMQA1AGYANgBlADIAYQA0AGEAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAA
MQAuADAALgA3ADgAMAA2AC4AMgA4ADYAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBh
AG0AZQAAAFMAVABfADQAMgAzADUAMwBiADYAMABmADcANAA0ADQAZAAwADMAOQBkAGEANwA4AGMA
MQA1AGYANgBlADIAYQA0AGEAZQAuAGQAbABsAAAAVgAZAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp
AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAASABQACAASQBuAGMALgAgADIAMAAyADEA
AAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADQAMgAzADUAMwBiADYAMABmADcA
NAA0ADQAZAAwADMAOQBkAGEANwA4AGMAMQA1AGYANgBlADIAYQA0AGEAZQAuAGQAbABsAAAAaAAk
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA0ADIAMwA1ADMAYgA2ADAAZgA3ADQA
NAA0AGQAMAAzADkAZABhADcAOABjADEANQBmADYAZQAyAGEANABhAGUAAABCAA8AAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAwADYALgAyADgANgAwADMAAAAAAEYA
DwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAwADYALgAy
ADgANgAwADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACoOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="133.333333333334,42.6666666666667"
          Id="Package\Script Task"
          TopLeft="251.87499624677,72.5263171546017" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>